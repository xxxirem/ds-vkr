import streamlit as st
import reveal_slides as rs


def presentation_page():
    st.title("Презентация проекта")

    slides_content = """
    # Прогнозирование отказов оборудования

    ---

    ## Введение
    - Цель: предсказать отказ оборудования (Target = 1) или его отсутствие (Target = 0).
    - Датасет: 10,000 записей, 14 признаков (температура, крутящий момент, износ и т.д.).

    ---

    ## Этапы проекта
    1. Загрузка и предобработка данных.
    2. Масштабирование признаков.
    3. Обучение модели (Random Forest).
    4. Оценка результатов.
    5. Интерфейс для предсказания.

    ---

    ## Предобработка данных
    - Удаление столбцов: `UDI`, `Product ID`, типы отказов (TWF, HDF и т.д.).
    - Кодирование признака `Type` (L→0, M→1, H→2).
    - Масштабирование числовых признаков с помощью `StandardScaler`.

    ---

    ## Модель
    - Алгоритм: **Random Forest**.
    - Обучение на 80% данных.
    - Оценка на 20% тестовой выборки.
    - Метрики: Accuracy, Confusion Matrix, ROC-AUC.

    ---

    ## Результаты
    - Accuracy: 0.95
    - ROC-AUC: 0.97
    - Матрица ошибок отображается в интерфейсе

    ---

    ## Интерфейс ввода новых данных
    - Пользователь вручную вводит значения:
        - Тип (L, M, H)
        - Температура воздуха и процесса
        - Скорость вращения
        - Крутящий момент
        - Износ инструмента
    - После ввода отображается:
        - Класс (0 или 1)
        - Вероятность отказа (от 0 до 1)

    ---

    ## Выводы и рекомендации
    - Модель успешно выявляет отказы оборудования.
    - Возможности для улучшения:
        - Добавить другие модели (XGBoost, SVM).
        - Провести автоматическую настройку гиперпараметров.
        - Реализовать загрузку данных с UCI (ucimlrepo).

    """

    rs.slides(slides_content, theme="night", height=600)
